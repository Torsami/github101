{"version":3,"sources":["getAQuestion.js"],"names":["pool","user","getAQuestion","req","res","id","parseInt","params","questionId","query","err","result","rows","viewed","error","viewedUpdate","questionResult","username","question","time","answers","status","send","success","message","questionData"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,OAAOC,eAAKD,IAAlB;;AAGA,IAAME,eAAe,SAAfA,YAAe,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC/B,QAAMC,KAAKC,SAASH,IAAII,MAAJ,CAAWC,UAApB,EAAgC,EAAhC,CAAX;;AAGAR,SAAKS,KAAL,CAAW,qCAAX,EAAkD,CAACJ,EAAD,CAAlD,EAAwD,UAACK,GAAD,EAAMC,MAAN,EAAe;;AAEnE,YAAG,OAAOA,OAAOC,IAAP,CAAY,CAAZ,CAAP,KAA2B,WAA9B,EAA0C;AAC1CD,mBAAOC,IAAP,CAAY,CAAZ,EAAeC,MAAf,GAAyBF,OAAOC,IAAP,CAAY,CAAZ,EAAeC,MAAf,GAAwB,CAAjD;AACRb,iBAAKS,KAAL,CAAW,gDAAX,EAA6D,CAACE,OAAOC,IAAP,CAAY,CAAZ,EAAeC,MAAhB,EAAwBR,EAAxB,CAA7D,EAA0F,UAACS,KAAD,EAAQC,YAAR,EAAyB,CAClH,CADD;AAEY,gBAAMC,iBAAiB;AACnBX,oBAAIM,OAAOC,IAAP,CAAY,CAAZ,EAAeP,EADA;AAEnBY,0BAAUN,OAAOC,IAAP,CAAY,CAAZ,EAAeK,QAFN;AAGnBC,0BAAUP,OAAOC,IAAP,CAAY,CAAZ,EAAeM,QAHN;AAInBC,sBAAMR,OAAOC,IAAP,CAAY,CAAZ,EAAeO,IAJF;AAKnBC,yBAAST,OAAOC,IAAP,CAAY,CAAZ,EAAeQ,OALL;AAMnBP,wBAAQF,OAAOC,IAAP,CAAY,CAAZ,EAAeC;AANJ,aAAvB;;AASA,mBAAOT,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,+BADwB;AAExBC,sDAFwB;AAGxBC,8BAAcT;AAHU,aAArB,CAAP;AAKP,SAlBG,MAkBC;AACD,mBAAOZ,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,gCADwB;AAExBC;AAFwB,aAArB,CAAP;AAIH;AACA,KA1BD;AA8BH,CAlCD;;kBAsCetB,Y","file":"getAQuestion.js","sourceRoot":"/home/sami/Documents/elint-retraced/github101/src","sourcesContent":["import db from './db/db';\r\nimport user from './user';\r\n\r\nconst pool = user.pool;\r\n\r\n\r\nconst getAQuestion = (req, res) => {\r\n    const id = parseInt(req.params.questionId, 10);\r\n\r\n\r\n    pool.query('SELECT * FROM questions WHERE id=$1', [id], (err, result)=>{\r\n       \r\n        if(typeof(result.rows[0]) !== 'undefined'){\r\n        result.rows[0].viewed  = result.rows[0].viewed + 1;\r\npool.query('UPDATE questions SET viewed = $1 WHERE id = $2', [result.rows[0].viewed, id], (error, viewedUpdate) => {\r\n})\r\n            const questionResult = {\r\n                id: result.rows[0].id,\r\n                username: result.rows[0].username,\r\n                question: result.rows[0].question,\r\n                time: result.rows[0].time,\r\n                answers: result.rows[0].answers,\r\n                viewed: result.rows[0].viewed\r\n            }\r\n\r\n            return res.status(200).send({\r\n                success: `true`,\r\n                message: `Task completed successfully`,\r\n                questionData: questionResult\r\n        })\r\n    }else{\r\n        return res.status(404).send({\r\n            success: `false`,\r\n            message: `Task not completed, no question found with specified id`\r\n        })\r\n    }\r\n    })\r\n\r\n   \r\n\r\n}\r\n\r\n    \r\n\r\nexport default getAQuestion;"]}