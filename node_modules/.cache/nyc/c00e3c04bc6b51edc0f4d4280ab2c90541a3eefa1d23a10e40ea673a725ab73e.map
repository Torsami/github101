{"version":3,"sources":["votes.js"],"names":["pool","user","voteDown","req","res","id","parseInt","params","questionId","answer","answerId","query","err","result","theAnswer","JSON","parse","rows","answers","success","message","ansTotVotes","opposition","count","checker","upVotes","indexOf","body","username","splice","length","downVotes","push","error","resp","status","send","voteUp"],"mappings":"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","file":"votes.js","sourceRoot":"/home/sami/Documents/elint-retraced/github101/src","sourcesContent":["import user from './user';\r\n\r\n\r\nconst pool = user.pool;\r\n\r\n\r\n\r\n\r\nconst voteDown = (req, res) => {\r\n\r\n    const id = parseInt(req.params.questionId, 10);\r\n    const answer = parseInt(req.params.answerId, 10);\r\n\r\n    pool.query('SELECT answers FROM questions WHERE id=$1', [id], (err, result)=>{\r\n    if(result){\r\n        let theAnswer = JSON.parse(result.rows[0].answers[answer]);\r\n        let success, message, ansTotVotes, opposition, count = 0;\r\n\r\n        let checker = theAnswer.upVotes.indexOf(req.body.username);\r\n        if(checker > -1){\r\n            theAnswer.upVotes.splice(checker, 1);\r\n            opposition =  theAnswer.upVotes.length;\r\n            count = count - 1\r\n\r\n          }\r\n\r\n        checker = theAnswer.downVotes.indexOf(req.body.username);\r\n\r\n        if(checker === -1){\r\n            theAnswer.downVotes.push(req.body.username);\r\n\r\n            success = `true`;\r\n            message = `Vote casted successfully`; \r\n            ansTotVotes = theAnswer.downVotes.length;\r\n            count = count + 1;\r\n\r\n        }else{\r\n            theAnswer.downVotes.splice(checker, 1);\r\n            success = `false`;\r\n            message = `Casted vote reversed successfully`; \r\n            ansTotVotes = theAnswer.downVotes.length - 1;\r\n            count = count - 1;\r\n        }\r\n        \r\n\r\n        result.rows[0].answers[answer] = theAnswer;\r\n\r\n\r\n        pool.query('UPDATE questions SET answers = $1 WHERE id = $2', [result.rows[0].answers, id], (error, resp) => {\r\n            \r\n            if(resp){\r\n                    res.status(201).send({\r\n                        success: success,\r\n                        message: message, \r\n                        opposition: opposition,\r\n                        ansTotVotes: theAnswer.downVotes.length,\r\n                        count: count\r\n\r\n                    })\r\n\r\n                }\r\n            })\r\n        }\r\n})\r\n}\r\n\r\n\r\nconst voteUp = (req, res) => {\r\n\r\n    const id = parseInt(req.params.questionId, 10);\r\n    const answer = parseInt(req.params.answerId, 10);\r\n\r\n    pool.query('SELECT answers FROM questions WHERE id=$1', [id], (err, result)=>{\r\n    if(result){\r\n        let theAnswer = JSON.parse(result.rows[0].answers[answer]);\r\n        let success, message, ansTotVotes, opposition, count = 0;\r\n\r\n        let checker = theAnswer.downVotes.indexOf(req.body.username);\r\n        if(checker > -1){\r\n            theAnswer.downVotes.splice(checker, 1);\r\n            opposition =  theAnswer.downVotes.length;\r\n            count = count - 1\r\n          }\r\n\r\n        checker = theAnswer.upVotes.indexOf(req.body.username);\r\n        if(checker === -1){\r\n            theAnswer.upVotes.push(req.body.username);\r\n\r\n             success = `true`;\r\n             message = `Vote casted successfully`;\r\n             ansTotVotes = theAnswer.upVotes.length ;\r\n             count = count + 1;\r\n        }else{\r\n            theAnswer.upVotes.splice(checker, 1);\r\n             success = `false`;\r\n             message = `Casted vote reversed successfully`; \r\n             ansTotVotes = theAnswer.upVotes.length - 1;\r\n             count = count - 1;\r\n        }\r\n        \r\n\r\n        result.rows[0].answers[answer] = theAnswer;\r\n\r\n\r\n        pool.query('UPDATE questions SET answers = $1 WHERE id = $2', [result.rows[0].answers, id], (error, resp) => {\r\n            \r\n            if(resp){\r\n                    res.status(201).send({\r\n                        success: success,\r\n                        message: message, \r\n                        opposition: opposition,\r\n                        ansTotVotes: theAnswer.upVotes.length,\r\n                        count: count\r\n\r\n\r\n                    })\r\n\r\n                }\r\n            })\r\n        }\r\n})\r\n}\r\n\r\nexport default {voteDown, voteUp};"]}