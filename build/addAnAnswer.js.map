{"version":3,"sources":["../src/addAnAnswer.js"],"names":["pool","user","addAnAnswer","req","res","id","parseInt","params","questionId","query","body","username","err","ans","ansContributed","rows","answers","cookie","error","ansUpdated","result","answersArray","newAnswer","length","answer","upVotes","downVotes","reply","time","Date","push","results","status","send","success","message"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,OAAOC,eAAKD,IAAlB;;AAGA,IAAME,cAAc,SAAdA,WAAc,CAACC,GAAD,EAAMC,GAAN,EAAc;;AAG9B,QAAMC,KAAKC,SAASH,IAAII,MAAJ,CAAWC,UAApB,EAAgC,EAAhC,CAAX;;AAEAR,SAAKS,KAAL,CAAW,6CAAX,EAA0D,CAACN,IAAIO,IAAJ,CAASC,QAAV,CAA1D,EAA+E,UAACC,GAAD,EAAMC,GAAN,EAAY;;AAEvF,YAAIC,iBAAiBR,SAASO,IAAIE,IAAJ,CAAS,CAAT,EAAYC,OAArB,IAAgC,CAArD;AACAZ,YAAIa,MAAJ,CAAW,SAAX,EAAsBH,cAAtB;;AAGAd,aAAKS,KAAL,CAAW,mDAAX,EAAgE,CAACK,cAAD,EAAiBX,IAAIO,IAAJ,CAASC,QAA1B,CAAhE,EAAqG,UAACO,KAAD,EAAQC,UAAR,EAAuB,CAC3H,CADD;;AAKRnB,aAAKS,KAAL,CAAW,2CAAX,EAAwD,CAACJ,EAAD,CAAxD,EAA8D,UAACO,GAAD,EAAMQ,MAAN,EAAe;AACzE,gBAAMC,eAAeD,OAAOL,IAAP,CAAY,CAAZ,EAAeC,OAApC;;AAEI,gBAAGI,MAAH,EAAU;AACN,oBAAME,YAAY;AACdjB,wBAAIgB,aAAaE,MAAb,GAAsB,CADZ;AAEdtB,0BAAME,IAAIO,IAAJ,CAASC,QAFD;AAGda,4BAAQrB,IAAIO,IAAJ,CAASc,MAHH;AAIdC,6BAAS,EAJK;AAKdC,+BAAU,EALI;AAMdC,2BAAO,EANO;AAOdC,0BAAM,IAAIC,IAAJ;AAPQ,iBAAlB;;AAUIR,6BAAaS,IAAb,CAAkBR,SAAlB;;AAGAtB,qBAAKS,KAAL,CAAW,iDAAX,EAA8D,CAACY,YAAD,EAAehB,EAAf,CAA9D,EAAkF,UAACa,KAAD,EAAQa,OAAR,EAAoB;;AAEtG,wBAAGX,MAAH,EAAU;AACV,+BAAOhB,IAAI4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,qCAAS,MADe;AAExBC,qCAAS,+BAFe;AAGxBnB,qCAASM,SAHe;AAIxBR,4CAAgBA;AAJQ,yBAArB,CAAP;AAMC,qBAPD,MAOK;AACL,+BAAOV,IAAI4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,4CADwB;AAExBC;AAFwB,yBAArB,CAAP;AAIC;AACJ,iBAfG;AAgBP;AAGJ,SApCL;AAqCK,KAhDD;AAoDH,CAzDD;;kBA2DejC,W","file":"addAnAnswer.js","sourcesContent":["import user from './user';\r\n\r\nconst pool = user.pool;\r\n\r\n\r\nconst addAnAnswer = (req, res) => {\r\n \r\n\r\n    const id = parseInt(req.params.questionId, 10);\r\n\r\n    pool.query('SELECT answers FROM users WHERE username=$1', [req.body.username], (err, ans)=>{\r\n\r\n        let ansContributed = parseInt(ans.rows[0].answers) + 1;\r\n        res.cookie(\"answers\", ansContributed);\r\n       \r\n       \r\n        pool.query('UPDATE users SET answers = $1 WHERE username = $2', [ansContributed, req.body.username], (error, ansUpdated) => {\r\n        })\r\n\r\n\r\n\r\npool.query('SELECT answers FROM questions WHERE id=$1', [id], (err, result)=>{\r\n    const answersArray = result.rows[0].answers;\r\n\r\n        if(result){\r\n            const newAnswer = {\r\n                id: answersArray.length + 1,\r\n                user: req.body.username,\r\n                answer: req.body.answer,\r\n                upVotes: [],\r\n                downVotes:[],\r\n                reply: [],\r\n                time: new Date()\r\n                };\r\n\r\n                answersArray.push(newAnswer);\r\n\r\n                \r\n                pool.query('UPDATE questions SET answers = $1 WHERE id = $2', [answersArray, id], (error, results) => {\r\n            \r\n                if(result){\r\n                return res.status(201).send({\r\n                    success: 'true',\r\n                    message: 'New Answer added successfully', \r\n                    answers: newAnswer,\r\n                    ansContributed: ansContributed\r\n                    })\r\n                }else{\r\n                return res.status(401).send({\r\n                    success: `false`,\r\n                    message: `An error occured, please try again`\r\n                })\r\n                }\r\n            })\r\n        }\r\n\r\n        \r\n    })\r\n    })\r\n\r\n\r\n    \r\n}\r\n\r\nexport default addAnAnswer;"]}